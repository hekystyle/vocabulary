import{b as y,J as x,E as h,N as j,O as N,c as U,j as e,S as l,Q as v}from"./index-BA-ZxV8D.js";import{Q as o,u as E}from"./queryKeys-CRgo353q.js";import{F as I}from"./Form-DaBSTOv_.js";import"./Tags-CQafaJV_.js";import"./index-BxMPb6J_.js";function S(s){return typeof s.returnUrl=="string"}const k=()=>{const s=y(),n=x(),{termsRepository:a}=h(),{id:r}=j(),t=r?parseInt(r,10):NaN,p=N({mutationKey:o.terms.id(t)}),{error:u,data:c,status:d}=E({queryKey:o.terms.id(t),queryFn:async({signal:i})=>await a.getById(t,i),enabled:!Number.isNaN(t)}),{mutateAsync:f}=U({mutationKey:o.terms.id(t),mutationFn:a.update.bind(a)}),m=()=>{v(n.state)&&S(n.state)?s(n.state.returnUrl):s("..")},b=i=>{f(i).then(m).catch(console.error)},g=()=>m();if(Number.isNaN(t))return e.jsxs("p",{children:["ID must be number, received: ",r]});if(p)return e.jsx(l,{label:"Updating ..."});switch(d){case"pending":return e.jsx(l,{label:"Loading term ..."});case"error":return e.jsxs("p",{children:["Error: ",u instanceof Error?u.message:"Unknown"]});case"success":return c===void 0?e.jsxs("p",{children:["Term not found by ID: ",r]}):e.jsx(I,{defaultValue:c,onCancel:g,onSubmit:b});default:return e.jsxs("p",{children:["Unknown status: ",d]})}};export{k as default};
