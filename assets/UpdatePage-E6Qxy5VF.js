import{b as x,E as y,x as h,I as j,J as N,c as U,j as e,S as l,K as I}from"./index-LX4azqjO.js";import{Q as o,u as v}from"./queryKeys-wAE75sjy.js";import{F as E}from"./Form-Ptp-jWlL.js";import"./Tags-U84QTEW4.js";import"./index-SZYp3TAn.js";function S(s){return typeof s.returnUrl=="string"}const B=()=>{const s=x(),n=y(),{termsRepository:a}=h(),{id:r}=j(),t=r?parseInt(r,10):NaN,p=N({mutationKey:o.terms.id(t)}),{error:u,data:c,status:d}=v({queryKey:o.terms.id(t),queryFn:async({signal:i})=>await a.getById(t,i),enabled:!Number.isNaN(t)}),{mutateAsync:f}=U({mutationKey:o.terms.id(t),mutationFn:a.update.bind(a)}),m=()=>{I(n.state)&&S(n.state)?s(n.state.returnUrl):s("..")},b=i=>{f(i).then(m).catch(console.error)},g=()=>m();if(Number.isNaN(t))return e.jsxs("p",{children:["ID must be number, received: ",r]});if(p)return e.jsx(l,{label:"Updating ..."});switch(d){case"pending":return e.jsx(l,{label:"Loading term ..."});case"error":return e.jsxs("p",{children:["Error: ",u instanceof Error?u.message:"Unknown"]});case"success":return c===void 0?e.jsxs("p",{children:["Term not found by ID: ",r]}):e.jsx(E,{defaultValue:c,onCancel:g,onSubmit:b});default:return e.jsxs("p",{children:["Unknown status: ",d]})}};export{B as default};
