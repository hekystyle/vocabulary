name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

concurrency: 
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install_windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile

  install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile

  build:
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-v1-${{ runner.os }}

      - run: pnpm nx run-many -t=build

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            **/build
            **/dist
          key: build-${{ github.sha }}

  lint:
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm run lint

  test:
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm nx run-many -t=test

      - name: Codecov
        uses: codecov/codecov-action@v4.4.0

  cypress:
    needs: [install, build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore build
        uses: actions/cache@v4
        with:
          path: |
            **/build
            **/dist
          key: build-${{ github.sha }}

      - name: Cypress run
        timeout-minutes: 2
        uses: cypress-io/github-action@v4 # use the explicit version number
        with:
          working-directory: ./apps/frontend-e2e
          install: false
          start: pnpm -w run serve
          wait-on: 'http://localhost:3000'
          browser: chrome

  deploy:
    needs: [install, build, test, cypress]
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore build
        uses: actions/cache@v4
        with:
          path: |
            **/build
            **/dist
          key: build-${{ github.sha }}

      - name: Deploy with gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npm run deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
